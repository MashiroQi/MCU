C51 COMPILER V9.60.0.0   MAIN                                                              11/25/2022 18:01:01 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\keilc51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REGX52.H>
   2          #include <stdio.h>
   3          #include <INTRINS.H>
   4          typedef unsigned char uchar;
   5          typedef unsigned short ushort;
   6          typedef unsigned int uint;
   7          sbit SCL = P1 ^ 5;        // IIC时钟引脚定义
   8          sbit SDA = P1 ^ 4;        // IIC数据引脚定义
   9          #define SMPLRT_DIV 0x19   // 陀螺仪采样率，典型值：0x07(125Hz)
  10          #define CONFIG 0x1A       // 低通滤波频率，典型值：0x06(5Hz)
  11          #define GYRO_CONFIG 0x1B  // 陀螺仪自检及测量范围，典型值：0x18(不自检，2000deg/s)
  12          #define ACCEL_CONFIG 0x1C // 加速计自检、测量范围及高通滤波频率，典型值：0x01(不自检，2G，5Hz)
  13          #define ACCEL_XOUT_H 0x3B
  14          #define ACCEL_XOUT_L 0x3C
  15          #define ACCEL_YOUT_H 0x3D
  16          #define ACCEL_YOUT_L 0x3E
  17          #define ACCEL_ZOUT_H 0x3F
  18          #define ACCEL_ZOUT_L 0x40
  19          #define TEMP_OUT_H 0x41
  20          #define TEMP_OUT_L 0x42
  21          #define GYRO_XOUT_H 0x43
  22          #define GYRO_XOUT_L 0x44
  23          #define GYRO_YOUT_H 0x45
  24          #define GYRO_YOUT_L 0x46
  25          #define GYRO_ZOUT_H 0x47
  26          #define GYRO_ZOUT_L 0x48
  27          #define PWR_MGMT_1 0x6B   // 电源管理，典型值：0x00(正常启用)
  28          #define WHO_AM_I 0x75     // IIC地址寄存器(默认数值0x68，只读)
  29          #define SlaveAddress 0xD0 // IIC写入时的地址字节数据，+1为读取
  30          
  31          uchar dis[6]; // 显示数字(-511至512)的字符数组
  32          int dis_data; // 变量
  33          
  34          void Serial_init()
  35          {
  36   1          TMOD |= 0X20;
  37   1          TH1 = 0Xfd;
  38   1          TL1 = 0Xfd; // 设置波特率9600
  39   1          TR1 = 1;    // 开定时器1中断
  40   1          SM0 = 0;    // 工作方式1
  41   1          SM1 = 1;
  42   1          ES = 1;  // 开始串口中断
  43   1          ET0 = 1; // 打开定时器0中断
  44   1          EA = 1;  // 开总中断
  45   1          TI = 1;
  46   1      }
  47          void SerialPushSend(uchar dat)
  48          {
  49   1          SBUF = dat;
  50   1          while (!TI)
  51   1              ;
  52   1          TI = 0;
  53   1      }
  54          void delay(unsigned int k)
C51 COMPILER V9.60.0.0   MAIN                                                              11/25/2022 18:01:01 PAGE 2   

  55          {
  56   1          unsigned int i, j;
  57   1          for (i = 0; i < k; i++)
  58   1          {
  59   2              for (j = 0; j < 121; j++)
  60   2                  ;
  61   2          }
  62   1      }
  63          void Delay5us()
  64          {
  65   1          _nop_();
  66   1          _nop_();
  67   1          _nop_();
  68   1          _nop_();
  69   1          _nop_();
  70   1          _nop_();
  71   1          _nop_();
  72   1          _nop_();
  73   1          _nop_();
  74   1          _nop_();
  75   1          _nop_();
  76   1          _nop_();
  77   1          _nop_();
  78   1          _nop_();
  79   1          _nop_();
  80   1          _nop_();
  81   1          _nop_();
  82   1          _nop_();
  83   1          _nop_();
  84   1          _nop_();
  85   1          _nop_();
  86   1          _nop_();
  87   1          _nop_();
  88   1          _nop_();
  89   1      }
  90          void IIC_Start()
  91          {
  92   1          SDA = 1;
  93   1          SCL = 1;
  94   1          Delay5us();
  95   1          SDA = 0;
  96   1          Delay5us();
  97   1          SCL = 0;
  98   1      }
  99          void IIC_Stop()
 100          {
 101   1          SDA = 0;
 102   1          SCL = 1;
 103   1          Delay5us();
 104   1          SDA = 1;
 105   1          Delay5us();
 106   1      }
 107          void IIC_SendAck(bit ack)
 108          {
 109   1          SDA = ack;
 110   1          SCL = 1;
 111   1          Delay5us();
 112   1          SCL = 0;
 113   1          Delay5us();
 114   1      }
 115          void IIC_RecAck()
 116          {
C51 COMPILER V9.60.0.0   MAIN                                                              11/25/2022 18:01:01 PAGE 3   

 117   1          SCL = 1;
 118   1          Delay5us();
 119   1          CY = SDA;
 120   1          SCL = 0;
 121   1          Delay5us();
 122   1          return;
 123   1      }
 124          void IIC_SendByte(uchar dat)
 125          {
 126   1          uchar i;
 127   1          for (i = 0; i < 8; i++)
 128   1          {
 129   2              dat <<= 1;
 130   2              SDA = CY;
 131   2              SCL = 1;
 132   2              Delay5us();
 133   2              SCL = 0;
 134   2              Delay5us();
 135   2          }
 136   1          IIC_RecAck();
 137   1      }
 138          uchar IIC_RecByte()
 139          {
 140   1          uchar i;
 141   1          uchar dat = 0;
 142   1          SDA = 1;
 143   1          for (i = 0; i < 8; i++)
 144   1          {
 145   2              dat <<= 1;
 146   2              SCL = 1;
 147   2              Delay5us();
 148   2              dat |= SDA;
 149   2              SCL = 0;
 150   2              Delay5us();
 151   2          }
 152   1          return dat;
 153   1      }
 154          void IIC_Write(uchar REG_Addr, uchar REG_dat)
 155          {
 156   1          IIC_Start();
 157   1          IIC_SendByte(SlaveAddress);
 158   1          IIC_SendByte(REG_Addr);
 159   1          IIC_SendByte(REG_dat);
 160   1          IIC_Stop();
 161   1      }
 162          uchar IIC_Read(uchar REG_Addr)
 163          {
 164   1          uchar rec_dat;
 165   1          IIC_Start();
 166   1          IIC_SendByte(SlaveAddress);
 167   1          IIC_SendByte(REG_Addr);
 168   1          IIC_Start();
 169   1          IIC_SendByte(SlaveAddress + 1);
 170   1          rec_dat = IIC_RecByte();
 171   1          IIC_SendAck(1);
 172   1          IIC_Stop();
 173   1      }
*** WARNING C173 IN LINE 173 OF main.c: missing return-expression
 174          void InitMPU6050()
 175          {
 176   1          IIC_Write(PWR_MGMT_1, 0x00); // 解除休眠状态
 177   1          IIC_Write(SMPLRT_DIV, 0x07);
C51 COMPILER V9.60.0.0   MAIN                                                              11/25/2022 18:01:01 PAGE 4   

 178   1          IIC_Write(CONFIG, 0x06);
 179   1          IIC_Write(GYRO_CONFIG, 0x18);
 180   1          IIC_Write(ACCEL_CONFIG, 0x01);
 181   1      }
 182          int GetData(uchar REG_Address)
 183          {
 184   1          uchar H, L;
 185   1          H = IIC_Read(REG_Address);
 186   1          L = IIC_Read(REG_Address + 1);
 187   1          return ((H << 8) + L); // 合成数据
 188   1      }
 189          void main()
 190          {
 191   1          Serial_init();
 192   1          InitMPU6050();
 193   1          while (1)
 194   1          {
 195   2              printf("%d ", GetData(ACCEL_XOUT_H)); // 显示X轴加速度
 196   2              printf("%d ", GetData(ACCEL_YOUT_H)); // 显示Y轴加速度
 197   2              printf("%d ", GetData(ACCEL_ZOUT_H)); // 显示Z轴加速度
 198   2              printf("%d ", GetData(GYRO_XOUT_H));  // 显示X轴角速度
 199   2              printf("%d ", GetData(GYRO_YOUT_H));  // 显示Y轴角速度
 200   2              printf("%d\n", GetData(GYRO_ZOUT_H)); // 显示Z轴角速度
 201   2          }
 202   1      }
*** WARNING C290 IN LINE 173 OF main.c: missing return value


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    450    ----
   CONSTANT SIZE    =      8    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
